############################################################
# Dockerfile to build Nginx Amplify Agent autotests
# Based on RHEL8 UBI
############################################################

# Set the base image to UBI8
# Note that UBI does not provide the same set of
# packages as RHEL8 repositories, so we need to use pip3
# below to install missed modules.
FROM registry.access.redhat.com/ubi8/ubi:8.4

# File Author / Maintainer
MAINTAINER Andrei Belov

# create required groups/users
RUN groupadd -r mysql && useradd -r -g mysql mysql
RUN groupadd -r www-data && useradd -r -g www-data www-data

RUN dnf --disableplugin=subscription-manager install -y tzdata
RUN dnf --disableplugin=subscription-manager module enable -y php:7.4

# install NGINX OS and some other applications
RUN dnf install -y \
     curl \
     nano \
     net-tools \
     nginx \
     php-fpm \
     python3 \
     python36-devel \
     python3-pytest \
     python3-PyMySQL \
     tar \
     wget \
     gcc \
     gcc-c++ \
     diffutils \
     file \
     make \
     procps-ng

# enforce mysqld default settings
#RUN service mysql stop
#RUN sed -i -e 's,^# pid-file,pid-file,' -e 's,^# socket,socket,' -e 's,^# port,port,' -e 's,^# datadir,datadir,' /etc/mysql/mysql.conf.d/mysqld.cnf

# copy nginx binary
RUN cp /usr/sbin/nginx /usr/sbin/nginx2

# configure for php-fpm
RUN rm -rf /run && mkdir -p /run/php/

# add fastcgi_params and php-fpm.conf for nginx
ADD docker/test/fastcgi_params /etc/nginx/fastcgi_params
ADD docker/test/php-fpm.conf /etc/nginx/conf.d/php-fpm.conf

# overwrite default www.conf for php-fpm and add second one
ADD docker/test/php-fpm-www.conf /etc/php/7.4/fpm/pool.d/www.conf
ADD docker/test/php-fpm-www2.conf /etc/php/7.4/fpm/pool.d/www2.conf

# add test .php file to /var/www/php-fpm root
ADD docker/test/test.php /var/www/php-fpm/test.php

# install supervisor
RUN pip3 install supervisor

# install agent requirements:
ADD docker/test/requirements.txt /etc/naas/requirements.txt
RUN pip3 install -I -r /etc/naas/requirements.txt

# install test requirements
RUN pip3 install \
    timeout-decorator \
    pyhamcrest \
    requests_mock \
    mock \
    freezegun \
    gevent==1.2.2 \
    ujson==2.0 \
    netifaces==0.10.6

# set some environment variables
ENV AMPLIFY_ENVIRONMENT testing
ENV PYTHONPATH /amplify

# set the default directory where CMD will execute
WORKDIR /amplify

# add config files
ADD docker/test/nginx.conf /etc/nginx/nginx.conf
ADD docker/test/nginx2.conf /etc/nginx/nginx2.conf
ADD docker/test/nginx_bad_status.conf /etc/nginx/nginx_bad_status.conf
ADD docker/test/nginx_syslog.conf /etc/nginx/nginx_syslog.conf
ADD docker/test/supervisord-rhel8.conf /etc/supervisord.conf
ADD docker/test/nginx_no_logs.conf /etc/nginx/nginx_no_logs.conf

# add ssl stuff
ADD docker/test/amplify-agent-test.crt /etc/nginx/certs.d/amplify-agent-test.crt
ADD docker/test/amplify-agent-test.key /etc/nginx/certs.d/amplify-agent-test.key

# set the home dir of the mysql user
RUN usermod -d /var/lib/mysql/ mysql

CMD bash
