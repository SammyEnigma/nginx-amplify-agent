upstream api_core {
  zone api_core 64k;

  server 56.152.196.220:1337 max_fails=2 fail_timeout=60s slow_start=30s;
  server 56.152.196.230:1337 max_fails=2 fail_timeout=60s slow_start=30s;
  server 56.152.196.226:1337 max_fails=2 fail_timeout=60s slow_start=30s;
  server 56.152.196.228:1337 max_fails=2 fail_timeout=60s slow_start=30s;
  server 56.152.196.229:1337 max_fails=2 fail_timeout=60s slow_start=30s;
  server 56.152.196.223:1337 max_fails=2 fail_timeout=60s slow_start=30s;
  server 56.152.196.221:1337 max_fails=2 fail_timeout=60s slow_start=30s;
  server 56.152.196.227:1337 max_fails=2 fail_timeout=60s slow_start=30s;
  server 56.152.196.207:1337 max_fails=2 fail_timeout=60s slow_start=30s;
  server 56.152.196.218:1337 max_fails=2 fail_timeout=60s slow_start=30s;
  server 56.152.196.232:1337 max_fails=2 fail_timeout=60s slow_start=30s;
  server 56.152.196.222:1337 max_fails=2 fail_timeout=60s slow_start=30s;
  server 56.152.196.231:1337 max_fails=2 fail_timeout=60s slow_start=30s;
  server 56.152.196.225:1337 max_fails=2 fail_timeout=60s slow_start=30s;
  server 56.152.196.219:1337 max_fails=2 fail_timeout=60s slow_start=30s;

  keepalive 128;

}

upstream socketio {
  zone api_socket 64k;

  server 56.152.196.220:1337 max_fails=2 fail_timeout=60s slow_start=30s;
  server 56.152.196.230:1337 max_fails=2 fail_timeout=60s slow_start=30s;
  server 56.152.196.226:1337 max_fails=2 fail_timeout=60s slow_start=30s;
  server 56.152.196.228:1337 max_fails=2 fail_timeout=60s slow_start=30s;
  server 56.152.196.229:1337 max_fails=2 fail_timeout=60s slow_start=30s;
  server 56.152.196.223:1337 max_fails=2 fail_timeout=60s slow_start=30s;
  server 56.152.196.221:1337 max_fails=2 fail_timeout=60s slow_start=30s;
  server 56.152.196.227:1337 max_fails=2 fail_timeout=60s slow_start=30s;
  server 56.152.196.207:1337 max_fails=2 fail_timeout=60s slow_start=30s;
  server 56.152.196.218:1337 max_fails=2 fail_timeout=60s slow_start=30s;
  server 56.152.196.232:1337 max_fails=2 fail_timeout=60s slow_start=30s;
  server 56.152.196.222:1337 max_fails=2 fail_timeout=60s slow_start=30s;
  server 56.152.196.231:1337 max_fails=2 fail_timeout=60s slow_start=30s;
  server 56.152.196.225:1337 max_fails=2 fail_timeout=60s slow_start=30s;
  server 56.152.196.219:1337 max_fails=2 fail_timeout=60s slow_start=30s;

  keepalive 128;

  sticky cookie upsvr expires=1h domain=.core.opentext.com path=/;
}

upstream cloud-admin {
  server 56.152.196.238:1997 max_fails=2 fail_timeout=60s;
  server 56.152.196.237:1997 max_fails=2 fail_timeout=60s;
}
upstream app_portal {
  server 56.152.196.235:1887 max_fails=2 fail_timeout=60s;
  server 56.152.196.239:1887 max_fails=2 fail_timeout=60s;
}

upstream app_support {
  server 56.152.196.69:80 max_fails=2 fail_timeout=60s;
}

upstream blog {
  server 56.152.196.147:80 max_fails=2 fail_timeout=60s;
}

map $http_cookie $login_redirect {
  default   0;
  "~*corelogin"  1;
}

server {
    listen      9090;
    server_name "";
    return      444;
}

server {
  listen 80;

  server_name 56.0.0.1;

  location /upstream_conf {
    upstream_conf;

    allow 56.0.0.1; # permit access from localhost
    deny all; # deny access from everywhere else
  }
}

server {
  listen 9090;

  add_header Strict-Transport-Security max-age=63072000;

  server_name 56.152.251.13 www.10.152.251.13 *.10.152.251.13 core.ooo.com;

  client_max_body_size 2048M;
  client_body_temp_path /mnt/nginx/upload_temp 1 2;
  charset utf-8;

  port_in_redirect off;

  root /opt/local/static/;
  index index.html;

  error_page 500 /502.html;
  error_page 502 /502.html;
  error_page 503 /502.html;
  error_page 504 /502.html;
  error_page 404 /404.html;
  error_page 456 = @coreapi;

  location ^~ /blog/wp-admin/ {
        return 404;
  }

  location ^~ /blog/ {
    proxy_pass http://blog/;
    proxy_redirect https://server_name http://blog;

    proxy_read_timeout       3500;
    proxy_connect_timeout    3250;

    proxy_set_header   X-Real-IP          $remote_addr;
    proxy_set_header   Host               $host;
    proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto  https;


    proxy_set_header   SSL_PROTOCOL $ssl_protocol;
    proxy_set_header   SSL_CLIENT_CERT $ssl_client_cert;
    proxy_set_header   SSL_CLIENT_VERIFY $ssl_client_verify;
    proxy_set_header   SSL_SERVER_S_DN $ssl_client_s_dn;
  }

  if ($http_user_agent ~ opentext-core) {
    set $login_redirect 1;
  }

  ###
  # Fixes for old stuff
  ###
  location ^~ /landing {
    rewrite ^/landing(.*) https://$host$1 last;
  }

  location ^~ /support/ {
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass http://app_support/support/;
  }

  location ^~ /account/ {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-NginX-Proxy true;

    proxy_pass http://app_portal/;
    proxy_redirect off;

    proxy_http_version 56.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

  }

  location ~ ^/download_clients/  {

  }

  location ^~ /app/ {
    return 456;
  }

  location ~ ^/mobile/? {
    return 456;
  }

  location ^~ /api/ {
    return 456;
  }

  location ^~ /socket.io/ {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-NginX-Proxy true;

    proxy_redirect off;
    set_real_ip_from 56.0.0.0/8;
    set_real_ip_from 56.0.0.0/8;
    real_ip_header X-Forwarded-For;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_http_version 56.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_pass http://socketio/socket.io/;
  }

  location ^~ /users/ {
    return 456;
  }

  location ^~ /blank/ {
    return 456;
  }

  location ~* \.(png|js|jpeg|jpg|css|appcache|ico|html|woff|svg|eot|ttf)$ {
    add_header Cache-Control "no-cache, must-revalidate";
  }

  location = /mobile.appcache {

  }

  location = / {
    if ($login_redirect) {
      rewrite ^/$ https://$host/users/;
    }
  }

  location / {
    try_files $uri $uri.html $uri/ @coreapi;
  }

  location @coreapi {
		proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
     # Set proxy headers
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-NginX-Proxy true;

    proxy_pass http://api_core;
    proxy_redirect off;
    set_real_ip_from 56.0.0.0/8;
    set_real_ip_from 56.0.0.0/8;
    real_ip_header X-Forwarded-For;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_http_version 56.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    proxy_connect_timeout       1500;
    proxy_send_timeout          1500;
    proxy_read_timeout          1500;
    send_timeout                1500;


    health_check interval=2s fails=3 passes=5 uri=/api/v1/_status match=statusok;
  }
}

server {
  listen 19090;

  add_header Strict-Transport-Security max-age=63072000;

  server_name 56.152.251.13 www.10.152.251.13 *.10.152.251.13 core.ooo.com;

  client_max_body_size 2048M;
  charset utf-8;

  port_in_redirect off;

  root /opt/local/static/;
  index index.html;

  error_page 500 /502.html;
  error_page 502 /502.html;
  error_page 503 /502.html;
  error_page 504 /502.html;
  error_page 404 /404.html;
  error_page 456 = @coreapi;

  location ^~ /cloud-admin/ {
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass http://cloud-admin/;
  }

  location ^~ /blog {
    proxy_pass http://blog/;
    proxy_redirect https://server_name http://blog;

    proxy_read_timeout       3500;
    proxy_connect_timeout    3250;

    proxy_set_header   X-Real-IP          $remote_addr;
    proxy_set_header   Host               $host;
    proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto  https;


    proxy_set_header   SSL_PROTOCOL $ssl_protocol;
    proxy_set_header   SSL_CLIENT_CERT $ssl_client_cert;
    proxy_set_header   SSL_CLIENT_VERIFY $ssl_client_verify;
    proxy_set_header   SSL_SERVER_S_DN $ssl_client_s_dn;
  }
}


match statusok {
  status 200;
  header Content-Type ~ application/json;
  body ~* "pong";
}
