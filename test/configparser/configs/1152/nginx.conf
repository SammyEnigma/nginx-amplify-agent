user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log info;
pid        /var/run/nginx.pid;

events {
    worker_connections  1000;
}

http {
    upstream web_rack_80 {
        least_conn;
        server 10.0.5.30:80 max_conns=500 max_fails=3 fail_timeout=30s;
        server 10.0.5.19:80 max_conns=500 max_fails=3 fail_timeout=30s;
    }
    upstream web_rack_443 {
        least_conn;
        server 10.0.5.30:443 max_conns=500 max_fails=3 fail_timeout=30s;
        server 10.0.5.19:443 max_conns=500 max_fails=3 fail_timeout=30s;
    }
    upstream web_rack_22558 {
        least_conn;
        server 10.0.5.30:22558 max_conns=500 max_fails=3 fail_timeout=30s;
        server 10.0.5.19:22558 max_conns=500 max_fails=3 fail_timeout=30s;
    }
    upstream web_rack_20521 {
        server 10.0.5.30:20521 max_conns=500 max_fails=3 fail_timeout=30s;
        server 10.0.5.19:20521 max_conns=500 max_fails=3 fail_timeout=30s;
    }

    upstream web_rack_80 {
        least_conn;
        server 10.0.5.31:80 max_conns=500 max_fails=3 fail_timeout=30s;
        server 10.0.5.23:80 max_conns=500 max_fails=3 fail_timeout=30s;
    }

    upstream web_rack_20531 {
        least_conn;
        server 10.0.5.31:20531 max_conns=500 max_fails=3 fail_timeout=30s;
        server 10.0.5.23:20531 max_conns=500 max_fails=3 fail_timeout=30s;
    }

    # force redirect of http to https
    # application will be available only over https

    server {
        listen 80;
        server_name *.ooo.com;
        rewrite ^ https://www.ooo.com;
    }

    server {
        listen 80;
        server_name *.mimolido.com;
        rewrite ^ http://www.mimolido.com;
    }


    # https server
    # example domain is www.ooo.com
    # traffic is going to local web servers over normal http
    # front nginx proxy server will hold ssl session

    server {
        listen   443 default ssl;
        listen   [::]:443 default ssl ipv6only=on; 
        server_name www.ooo.com;
        ssl                 on;
        ssl_certificate     /etc/ssl/ooo.com.crt;
        ssl_certificate_key /etc/ssl/ooo.com.key;
        ssl_session_cache   shared:SSL:10m;
        ssl_session_timeout 10m;
	ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
        location / {
            proxy_pass https://web_rack_443;
        }
    }

    server {
        listen 22558;
        server_name www.ooo.com;
	ssl                 on;
        ssl_certificate     /etc/ssl/ooo.com.crt;
        ssl_certificate_key /etc/ssl/ooo.com.key;
        ssl_session_cache   shared:SSL:10m;
        ssl_session_timeout 10m;
	ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
        location / {
            proxy_pass https://web_rack_22558;
        }
    }

    server {
        listen 20521;
        server_name www.ooo.com;
	ssl                 on;
        ssl_certificate     /etc/ssl/ooo.com.crt;
        ssl_certificate_key /etc/ssl/ooo.com.key;
        ssl_session_cache   shared:SSL:10m;
        ssl_session_timeout 10m;
	ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
        location / {
            proxy_pass https://web_rack_20521;
        }
    }

server {
	listen 20531;
	server_name www.ooo.com;
	location / {
	    proxy_pass http://web_rack_20531;
	}
    }
}
