map $request_uri $route_uri {
    ~sortd_rt=\s*(?P<route>\w+)&*.*$ $route;
}

upstream static_content {
    zone static_content 64k;
}

upstream app_sortd {
    zone app_sortd 64k;

    sticky route $cookie_sortd_rt $route_uri;
    keepalive 50;
}

server {
    listen       443 ssl default_server;
    server_name  localhost;

    ssl_certificate      /etc/nginx/conf.d/ssl.crt;
    ssl_certificate_key  /etc/nginx/conf.d/ssl.key;

    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout  10m;
    ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers  ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;
    ssl_prefer_server_ciphers   on;

    #charset koi8-r;
    #access_log /var/log/nginx/sortd_access.log sortd;
    #access_log  /var/log/nginx/log/host.access.log  main;

    location / {
        #root   /usr/share/nginx/html;
        #index  index.html index.htm;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;

        proxy_read_timeout 600s;
                proxy_send_timeout 600s;

                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";

                expires -1;

                proxy_pass http://app_sortd;
                proxy_redirect off;

                location  /login {
                    proxy_pass http://app_sortd/login/;
                    expires -1;
                }

                location  /login/ {
                    proxy_pass http://app_sortd/login/;

                    expires 365d;
                    add_header Pragma public;
                    add_header Cache-Control "public";
                }
            }

            location ~* ^/(\d+?)\/(js|jsce|img|css|jsce|partials)\/(.*)$ {
              proxy_pass http://static_content/$1/$2/$3;
            }



            location /js/ {
                proxy_pass http://static_content/js/;
            }

            location /jsce/ {
                proxy_pass http://static_content/jsce/;
            }

            location /img/ {
                    proxy_pass http://static_content/img/;
                }

                location /css/ {
                    proxy_pass http://static_content/css/;
                }

                location /partials/ {
                    proxy_pass http://static_content/partials/;
                }


                #error_page  404              /404.html;

                # redirect server error pages to the static page /50x.html
                #
                #error_page   500 502 503 504  /50x.html;
                #location = /50x.html {
                #    root   /usr/share/nginx/html;
                #}

                location /upstream_conf {
                   upstream_conf;

                   #allow 127.0.0.1; # permit access from localhost
                   #allow 172.31.0.0/20; #Sortd VPC
                   deny all; # deny access from everywhere else
                }

                location /nginx_status {
                    stub_status on;
                    access_log off;
                    #allow 127.0.0.1;
                    #allow 172.31.0.0/20; #Sortd VPC
                    deny all;
                }

}

server {
    listen       80;
    server_name  localhost;

    location /upstream_conf {
       upstream_conf;


       allow 127.0.0.1; # permit access from localhost
       #allow 172.31.0.0/20; #Sortd VPC Subnet Availability Zone us-east-1a
       #allow 172.31.32.0/20; #Sortd VPC Subnet Availability Zone us-east-1c
       allow 172.31.0.0/16; #Sortd Default VPC All Availability Zones (Subnets)
       deny all; # deny access from everywhere else

    }

    location /nginx_status {
       stub_status on;
       access_log off;

       allow 127.0.0.1; # permit access from localhost
       #allow 172.31.0.0/20; #Sortd VPC Subnet Availability Zone us-east-1a
       #allow 172.31.32.0/20; #Sortd VPC Subnet Availability Zone us-east-1c
       allow 172.31.0.0/16; #Sortd Default VPC All Availability Zones (Subnets)
       deny all; # deny access from everywhere else
    }

}


